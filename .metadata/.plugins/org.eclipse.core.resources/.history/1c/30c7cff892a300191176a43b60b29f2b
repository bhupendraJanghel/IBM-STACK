package com.example.spring.Jpa.ThymeLeaf.ThymleafEmployee.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.example.spring.Jpa.ThymeLeaf.ThymleafEmployee.entity.Employee;
import com.example.spring.Jpa.ThymeLeaf.ThymleafEmployee.service.EmployeeService;

@Controller
@RequestMapping("/employees")
public class EmployeeController {

	private EmployeeService service;

	@Autowired
	public EmployeeController(EmployeeService service) {
		super();
		this.service = service;
	}

	@RequestMapping("/")
	public String dod() {
		return "hello";
	}

	@GetMapping("/list")
	public String getAllEmployee(Model theModel) {
		List<Employee> list = service.getAllEmployee();
		theModel.addAttribute("employeeList", list);
		return "employee-list";

	}

	@RequestMapping("/showForm")
	public String showForm(Model theModel) {
		Employee employee = new Employee();
		theModel.addAttribute("employee", employee);
		return "employee-form";

	}

	@PostMapping("/save")
	public String saveEmployee(@ModelAttribute("employee") Employee employee) {

		service.saveEmployee(employee);
		return "redirect:/employees/list";
	}

	@GetMapping("/delete")
	public String deleteEmployee(@RequestParam("id") int id) {
		service.deleteEmployee(id);
		return "redirect:/employees/list";
	}

	@GetMapping("/showFormForUpdate")
	public String showFormForUpdate(@RequestParam("employeeId") int theId, Model theModel) {

		// get the employee from the service
		Employee theEmployee = service.findById(theId);

		// set employee as a model attribute to pre-populate the form
		theModel.addAttribute("employee", theEmployee);

		// send over to our form
		return "employees/employee-form";
	}

	@GetMapping("/search")
	public String search(@RequestParam("firstName") String theFirstName, @RequestParam("lastName") String theLastName,
			Model theModel) {

		// check names, if both are empty then just give list of all employees

		if (theFirstName.trim().isEmpty() && theLastName.trim().isEmpty()) {
			return "redirect:/employees/list";
		} else {
			// else, search by first name and last name
			List<Employee> theEmployees = service.searchBy(theFirstName, theLastName);

			// add to the spring model
			theModel.addAttribute("employees", theEmployees);

			// send to list-employees
			return "employees/search-list";
		}

	}
}
